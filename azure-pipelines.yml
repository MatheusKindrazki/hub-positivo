trigger:
  branches:
    include:
    - refs/heads/develop
    - refs/heads/release/*
    - refs/heads/hotfix/*
    - refs/heads/main
name: $(date:yyyyMMdd)$(rev:.r)

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    stageName: prod
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    stageName: dev
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/release') }}:
    stageName: hml
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix') }}:
    stageName: hml

pool:
  vmImage: ubuntu-16.04

jobs:
- job: build_and_generate_artifact
  displayName: "Building and generating the artifact"

  steps:

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'hub-sonarcloud'
      organization: 'editorati'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'editorati_HubDigitalFront'
      cliProjectName: 'HubDigitalFront'
      cliSources: '.'
      extraProperties: |
        sonar.sources=packages/apps/web/src/components,packages/apps/web/src/pages,packages/apps/web/src/services,packages/apps/web/src/store/modules,packages/apps/web/src/utils,packages/apps/web/src/validators,packages/apps/web/src/middlewares,packages/apps/web/src/hooks,packages/common/components
        sonar.exclusions=**/*.spec.ts,**/*.spec.tsx,**/types.ts,**/*.d.ts,**/mock.ts,
        sonar.coverage.exclusions=**/*.spec.ts,**/*.spec.tsx,**/types.ts,**/*.d.ts,**/mock.ts,**/*.js
        sonar.javascript.lcov.reportPaths=coverage/lcov.info
        sonar.testExecutionReportPaths=test-report.xml
        sonar.test.inclusions=packages/apps/web/src/**/*.spec.tsx,packages/apps/web/src/**/*.spec.ts,packages/common/**/*.spec.tsx,packages/apps/common/**/*.spec.ts

  - task: DownloadSecureFile@1
    displayName: "Download env file"
    name: envFile
    inputs:
      secureFile: 'env-hub-$(stageName)'

  - script: |
      cp $(envFile.secureFilePath) ./packages/apps/web/.env
      cp $(envFile.secureFilePath) ./packages/apps/easyauth/.env
    displayName: "Copy env file"

  - task: NodeTool@0
    displayName: Installing node 14+
    inputs:
      versionSpec: 14.x

  - task: YarnInstaller@3
    displayName: Configuring yarn in its recent version

  - task: Cache@2
    inputs:
      key: yarn | $(Agent.OS) | yarn.lock | node_modules
      path: $(YARN_CACHE_FOLDER)
      restoreKeys: |
        yarn | $(Agent.OS)
        yarn
    displayName: Cache Yarn packages

  - script: yarn --frozen-lockfile
    displayName: Installing project dependencies

  - script: |
      export GH_TOKEN=$(GH_TOKEN) && set GH_TOKEN=$(GH_TOKEN) && yarn release
    displayName: Semantic Release ( generate changelog and build tag )
    condition: eq(variables['Build.SourceBranchName'], 'main')

  - script: |
      node ./scripts/update-version.js
    displayName: Updating production version

  - task: Yarn@3
    displayName: Build the project DEV/MCF
    condition: eq(variables['Build.SourceBranchName'], 'develop')
    inputs:
      arguments: build:easyauth

  - task: Yarn@3
    displayName: Build the project
    inputs:
      arguments: build:web

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(System.DefaultWorkingDirectory)/packages/apps/web/build'
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)/dist
    displayName: 'Copy dist'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
      artifactName: dist
    displayName: 'Publish dist artifact'
